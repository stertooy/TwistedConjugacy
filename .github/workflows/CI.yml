name: CI
on:
  - push
  - pull_request
  - workflow_dispatch

jobs:

  test-pkg:
    name: "Run package tests on GAP-${{ matrix.gap-version }}"
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name != github.event.pull_request.base.repo.full_name 
    
    strategy:
      fail-fast: false
      matrix:
        include:
          - gap-version: "master"
            coverage: true
          - gap-version: "4.15.0-beta1"
            coverage: false
          - gap-version: "4.14.0"
            coverage: false

    container:
      image: ghcr.io/stertooy/gda-image:${{ matrix.gap-version }}-slim

    steps:

      - name: "Checkout"
        uses: actions/checkout@v5

      - name: "Install Polycyclic 2.17 if necessary"
        shell: bash
        run: |
          gap -A << GAPInput
            LoadPackage("PackageManager":OnlyNeeded);
            if LoadPackage("polycyclic","2.17") <> true then
              InstallPackage("polycyclic");
            fi;
            QUIT;
          GAPInput

      - name: "Run package tests with minimal packages"
        uses: gap-actions/run-pkg-tests@v3
        with:
          NO_COVERAGE: ${{ !matrix.coverage }}
          only-needed: true
          warnings-as-errors: true

      - name: "Run package tests with default packages"
        uses: gap-actions/run-pkg-tests@v3
        with:
          NO_COVERAGE: ${{ !matrix.coverage }}
          warnings-as-errors: true
            
      - name: "Process coverage"
        uses: gap-actions/process-coverage@v2
        if: ${{ matrix.coverage }}

      - name: "Upload coverage"
        uses: codecov/codecov-action@v5
        if: ${{ matrix.coverage }}
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true

  test-gap:
    name: "Run GAP tests on GAP-${{ matrix.gap-version }}"
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name != github.event.pull_request.base.repo.full_name 
    
    strategy:
      fail-fast: false
      matrix:
        gap-version:
          - "master"
          - "4.15.0-beta1"
          - "4.14.0"

    container:
      image: ghcr.io/stertooy/gda-image:${{ matrix.gap-version }}-slim

    steps:

      - name: "Checkout"
        uses: actions/checkout@v5

      - name: "Install Polycyclic 2.17 if necessary"
        shell: bash
        run: |
          gap -A << GAPInput
            LoadPackage("PackageManager":OnlyNeeded);
            if LoadPackage("polycyclic","2.17") <> true then
              InstallPackage("polycyclic");
            fi;
            QUIT;
          GAPInput

      - name: "Run GAP tests with necessary packages"
        uses: stertooy/run-gap-tests@v1
        with:
          mode: onlyneeded

      - name: "Run GAP tests with suggested packages"
        uses: stertooy/run-gap-tests@v1

  validate:
    name: "Validate manual & metadata"
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name != github.event.pull_request.base.repo.full_name 

    container:
      image: ghcr.io/stertooy/gda-image:master-full

    steps:

      - name: "Checkout"
        uses: actions/checkout@v5

      - name: "Validate CITATION.cff"
        uses: citation-file-format/cffconvert-github-action@2.0.0
        with:
          args: "--validate"
          
      - name: "Build manual"
        uses: gap-actions/build-pkg-docs@v1

      - name: "Validate PackageInfo.g"
        shell: bash
        run: gap -c "QuitGap(ValidatePackageInfo(\"PackageInfo.g\"));"

      - name: "Upload manual"
        uses: actions/upload-artifact@v4
        with:
          name: "Manual"
          path: ./doc/manual.pdf
          if-no-files-found: error

  lint:
    name: "Lint"
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name != github.event.pull_request.base.repo.full_name 

    steps:
    
      - name: "Checkout"
        uses: actions/checkout@v5

      - name: "Setup Python"
        uses: actions/setup-python@v5
        with:
          python-version: 3

      - name: Install gaplint
        shell: bash
        run: pip install gaplint

      - name: Run linter
        shell: bash
        run: |
          shopt -s globstar extglob
          FILES="*.g !(doc)/**/*.g*"
          gaplint $FILES --config-file=.github/gaplint.yml
