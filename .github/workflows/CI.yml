name: CI
on:
  - push
  - pull_request
  - workflow_dispatch

jobs:

  test:
    name: "Test on GAP-${{ matrix.gap-version }}"
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name != github.event.pull_request.base.repo.full_name 
    
    strategy:
      fail-fast: false
      matrix:
        include:
          - gap-version: "master"
          - gap-version: "4.14.0"
            no-coverage: true

    container:
      image: ghcr.io/stertooy/gda-image:${{ matrix.gap-version }}-slim

    steps:

      - name: "Checkout"
        uses: actions/checkout@v4

      - name: "Run package tests with minimal packages"
        uses: gap-actions/run-pkg-tests@v3
        with:
          NO_COVERAGE: ${{ matrix.no-coverage }}
          only-needed: true
          warnings-as-errors: true

      - name: "Run package tests with default packages"
        uses: gap-actions/run-pkg-tests@v3
        with:
          NO_COVERAGE: ${{ matrix.no-coverage }}
          warnings-as-errors: true

      - name: "Run package tests with all packages"
        uses: gap-actions/run-pkg-tests@v3
        with:
          NO_COVERAGE: ${{ matrix.no-coverage }}
          load-all: true
          warnings-as-errors: true
            
      - name: "Process coverage"
        uses: gap-actions/process-coverage@v2
        if: ${{ !matrix.no-coverage }}

      - name: "Upload coverage"
        uses: codecov/codecov-action@v5
        if: ${{ !matrix.no-coverage }}
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true

  validation:
    name: "Validate manual & metadata"
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name != github.event.pull_request.base.repo.full_name 

    container:
      image: ghcr.io/stertooy/gda-image:tex-slim

    steps:

      - name: "Checkout"
        uses: actions/checkout@v4

      - name: "Validate CITATION.cff"
        uses: citation-file-format/cffconvert-github-action@2.0.0
        with:
          args: "--validate"

      - name: "Build manual"
        uses: gap-actions/build-pkg-docs@v1.3.2

      - name: "Validate PackageInfo.g"
        shell: bash
        run: gap -c "QuitGap(ValidatePackageInfo(\"PackageInfo.g\"));"

      - name: "Upload manual"
        uses: actions/upload-artifact@v4
        with:
          name: "Manual"
          path: ./doc/manual.pdf
          if-no-files-found: error

  lint:
    name: "Test code quality"
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name != github.event.pull_request.base.repo.full_name 

    steps:
    
      - name: "Checkout"
        uses: actions/checkout@v4

      - name: "Setup Python"
        uses: actions/setup-python@v5
        with:
          python-version: 3

      - name: Install gaplint
        run: pip install gaplint

      - name: Run linter
        run: |
          shopt -s globstar
          FOLDERS="lib/** **/*.g"
          gaplint $FOLDERS --columns=79 --indentation=4 --disable=W003,W004,W012,W013,W014,W046
          # Also check for double semicolon
          semi=$(egrep -ir --include=*.{g,gi,gd} ";;" $FOLDERS | tee /dev/stderr)
          if [[ ! $semi ]]; then exit 0; else exit 1; fi
